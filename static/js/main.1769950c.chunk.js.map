{"version":3,"sources":["AddTodo.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","state","activity","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","newTodo","onSubmit","this","className","htmlFor","type","id","placeholder","onChange","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","Component","Todo","todos","deleteTodo","todoList","map","todo","App","Math","random","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAgCeA,E,4MA7BXC,MAAQ,CACJC,SAAU,I,EAEdC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,SAAUE,EAAEE,OAAOC,S,EAG3BC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,QAAQ,EAAKV,OACxB,EAAKI,SAAS,CACVH,SAAS,M,4CAIjB,WACI,OACI,uBAAMU,SAAUC,KAAKL,aAAcM,UAAU,OAA7C,UACI,uBAAOC,QAAQ,aACf,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,YAAY,eAAeC,SAAWN,KAAKV,aAAcW,UAAU,sCAAsCP,MAAOM,KAAKZ,MAAMC,WAC5J,qBAAKY,UAAU,gEAAgEM,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAA3I,SAAwK,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8DAA8DC,QAASf,KAAKL,wB,GAtBnTqB,aCoBPC,EApBF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACZC,EAAWF,EAAMG,KAAI,SAACC,GACxB,OACI,sBAAKrB,UAAU,4DAAf,UACI,oBAAIA,UAAU,oBAAd,SAAmCqB,EAAKjC,WACxC,qBAAKY,UAAU,eAAf,SACI,qBAAKA,UAAU,2DAA2DM,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAAtI,SAAmK,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,+HAA+HC,QAAU,WAAKI,EAAWG,EAAKlB,aAH9TkB,EAAKlB,OAS7F,OACI,8BACKgB,KCqCEG,E,4MA9CbnC,MAAQ,CACN8B,MAAQ,CACN,CAAE7B,SAAU,qBAAsBe,GAAI,GACtC,CAAEf,SAAU,iBAAkBe,GAAI,GAClC,CAAEf,SAAU,iBAAkBe,GAAK,GACnC,CAAEf,SAAU,sBAAuBe,GAAI,K,EAK3CN,QAAU,SAACwB,GACTA,EAAKlB,GAAKoB,KAAKC,SACf,IAAIP,EAAK,sBAAO,EAAK9B,MAAM8B,OAAlB,CAAyBI,IAClC,EAAK9B,SAAS,CACZ0B,MAAQA,K,EAGZC,WAAa,SAACf,GACZ,IAAIc,EAAQ,EAAK9B,MAAM8B,MAAMQ,QAAO,SAAAJ,GAClC,OAAOA,EAAKlB,KAAOA,KAErB,EAAKZ,SAAS,CACZ0B,MAAMA,K,4CAGV,WACE,OACE,qBAAKjB,UAAU,mDAAf,SACE,sBAAKA,UAAU,wEAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,2DAAd,yBAEF,gCACE,cAAC,EAAD,CAASH,QAAWE,KAAKF,UACzB,cAAC,EAAD,CAAMoB,MAAOlB,KAAKZ,MAAM8B,MAAOC,WAAcnB,KAAKmB,yB,GApC5CH,aCOHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1769950c.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass AddTodo extends Component{\r\n    state = {\r\n        activity: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            activity: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.newTodo(this.state)\r\n        this.setState({\r\n            activity:''\r\n        })\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit} className=\"flex\">\r\n                <label htmlFor=\"activity\"></label>\r\n                <input type=\"text\" id=\"activity\" placeholder=\"Add New Todo\" onChange ={this.handleChange} className=\"w-4/6 flex h-12 text-center ml-14  \" value={this.state.activity}/>\r\n                <svg className=\"w-6 h-10 flex text-center cursor-pointer ml-12 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" onClick={this.handleSubmit} /></svg>\r\n                \r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo;","\r\n\r\nconst Todo = ({todos, deleteTodo}) => {\r\n    const todoList = todos.map((todo)=>{\r\n        return(\r\n            <div className=\"todos divide-light-blue-400 border flex h-16 items-center\" key={todo.id}>\r\n                <h2 className=\"w-4/5 flex pl-14 \">{todo.activity}</h2>\r\n                <div className=\"h-full w-1/5\">\r\n                    <svg className=\"w-6 h-14 cursor-pointer flex text-center text-green-600 \" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" onClick ={()=>{deleteTodo(todo.id)}}/></svg>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }) \r\n    return ( \r\n        <div>\r\n            {todoList}\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default Todo;","import { Component } from 'react';\nimport AddTodo from './AddTodo';\nimport Todo from './Todo';\n\n\nclass App extends Component{\n\n  state = {\n    todos : [\n      { activity: \"Wake up from sleep\", id: 1},\n      { activity: \"Brush my teeth\", id: 2},\n      { activity: \"Have breakfast\", id : 3},\n      { activity: \"Leave home for work\", id: 4}\n\n    ]\n  }\n\n  newTodo = (todo) =>{\n    todo.id = Math.random();\n    let todos = [...this.state.todos, todo];\n    this.setState({\n      todos : todos\n    })\n  }\n  deleteTodo = (id) =>{\n    let todos = this.state.todos.filter(todo=>{\n      return todo.id !== id\n    })\n    this.setState({\n      todos:todos\n    })\n  }\n  render(){\n    return(\n      <div className=\"w-full flex flex-col h-screen items-center mt-20\">\n        <div className=\"h-auto w-3/5 divide-y divide-light-blue-400 border border-indigo-600 \">\n          <div className=\" h-20\">\n            <h1 className=\"text-6xl text-blue-600 flex justify-center items-center \">Todo List</h1>\n          </div>\n          <div>\n            <AddTodo newTodo = {this.newTodo}></AddTodo>\n            <Todo todos={this.state.todos} deleteTodo = {this.deleteTodo}></Todo>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}